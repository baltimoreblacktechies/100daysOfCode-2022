Worked on the next chapter of Learn Bash The Hard Way. What I learned:

* You don't need quotes to declare a string var: e.g.
MYSTRING=astring
echo $MYSTRING --> astring

* Single quotes for vars means you don't actually call the var: e.g.
MYSENTENCE='A sentence with $MYSTRING in it'
echo $MYSENTENCE -->  A sentence with $MYSTRING in it

* This is not true for globs (*): e.g.
MYGLOB="*"
echo $MYGLOB --> Everything in my current directory

* When indexing arrays:
I need curly brackets around the whole variable and index
But the $ still goes outside of the whole declaration: e.g.
${BASH_VERSINFO[0]}

* All simple vars in bash are really arrays with just 1 element in it

* Commas are one way to iterate through an array: e.g.
echo ${BASH_VERSINFO[0,5]} --> x86_64-pc-linux-gnu (returns elements 0-5)

* Associative arrays are like dicts but look very messy; should prob avoid them
